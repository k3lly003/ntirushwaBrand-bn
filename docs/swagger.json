{
  "swagger": "2.0",
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format **Bearer <token>**"
    }
  },
  "security": [{ "Bearer": [] }],

  "info": {
    "title": "ntirushwaBrand's APIs",
    "description": "This is ntirushwabrand's swagger documentation",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basepath": "",

  "$schema": {
    "Blog": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "atleast 20 characters"
        },
        "image": {
          "type": "string",
          "format": "binary"
        },
        "description": {
          "type": "string",
          "description": "atleast 5 characters as minimun"
        },
        "content": {
          "type": "string",
          "description": "atleast 10 minimun characters "
        }
      }
    },

    "BlogUpdate": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "atleast 20 characters"
        },
        "image": {
          "type": "string",
          "format": "binary"
        },
        "blogIntro": {
          "type": "string",
          "description": "atleast 50 characters as minimun"
        },
        "content": {
          "type": "string",
          "description": "atleast 300 minimun characters "
        }
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "authentication operations"
    },
    {
      "name": "Blogs",
      "description": "Blogs APIs"
    },
    {
      "name": "Comments",
      "description": "Comments APIs"
    },
    {
      "name": "Messages",
      "description": "Messages APIs"
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "summary": "User Sign Up",
        "description": "Create a new user account",
        "tags": ["Auth"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "example": {
                "firstName": "Joshua",
                "secondName": "Mutabazi",
                "email": "josh@gmail.com",
                "password": "mutama333"
              },
              "required": true
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "summary": "User Sign In",
        "description": "Authenticate user and generate access token",
        "tags": ["Auth"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "example": {
                "email": "josh@gmail.com",
                "password": "mutama333"
              },
              "required": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User authenticated successfully"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/blogs/create": {
      "post": {
        "summary": "Create a new blog",
        "description": "This endpoint is used to create a new blog",
        "tags": ["Blogs"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "title",
            "type": "string",
            "required": true,
            "description": "Title for the blog"
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "required": true,
            "description": "Image file for the blog"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": true,
            "description": "description for the blog"
          },
          {
            "in": "formData",
            "name": "content",
            "type": "string",
            "required": true,
            "description": "Content for the blog"
          }
        ],
        "responses": {
          "201": {
            "description": "Blog created"
          }
        }
      }
    },
    "/api/blogs/read/all": {
      "get": {
        "summary": "Get all blogs",
        "description": "This endpoint is used to get all blogs",
        "tags": ["Blogs"],
        "responses": {
          "200": {
            "Schema": {
              "res": "#/component/schemas/blogListResponse"
            },
            "description": "Successful response"
          }
        }
      }
    },
    "/api/blogs/{blogId}/update": {
      "patch": {
        "summary": "Update a blog by ID",
        "description": "This endpoint is used to update a single blog by its ID",
        "tags": ["Blogs"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "blogId",
            "in": "path",
            "description": "ID of the blog to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string",
            "required": false,
            "description": "Title for the blog"
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "required": false,
            "description": "Image file for the blog"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": false,
            "description": "description for the blog"
          },
          {
            "in": "formData",
            "name": "content",
            "type": "string",
            "required": false,
            "description": "Content for the blog"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "contents": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "format": "url"
                  }
                },
                "required": []
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Blog updated"
          },
          "404": {
            "description": "Blog not found"
          }
        }
      }
    },

    "/api/blogs/{blogId}/read": {
      "get": {
        "summary": "Get a single blog by ID",
        "description": "This endpoint is used to get a single blog by its ID",
        "tags": ["Blogs"],
        "parameters": [
          {
            "name": "blogId",
            "in": "path",
            "description": "ID of the blog to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Blog not found"
          }
        }
      }
    },
    "/api/blogs/{blogId}/delete": {
      "delete": {
        "summary": "Delete a blog by ID",
        "description": "This endpoint is used to delete a single blog by its ID",
        "tags": ["Blogs"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "blog_id",
            "in": "path",
            "description": "ID of the blog to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Blog deleted"
          },
          "404": {
            "description": "Blog not found"
          }
        }
      }
    },
    "/api/messages/create": {
      "post": {
        "summary": "Create a new message",
        "description": "This endpoint is used to create a new message",
        "tags": ["Messages"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "example": {
                "email": "ntiru@gmail.com",
                "text": "Hey buy"
              },
              "required": true
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Message created"
          }
        }
      }
    },
    "/api/messages/read": {
      "get": {
        "summary": "Get all messages",
        "description": "This endpoint is used to get all messages",
        "tags": ["Messages"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/api/comments": {
      "get": {
        "summary": "Get all comments",
        "description": "This endpoint is used to get all comments",
        "tags": ["Comments"],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "post": {
        "summary": "Create a new comment",
        "description": "This endpoint is used to create a new comment on a blog",
        "tags": ["Comments"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "blogId": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": ["blogId", "description"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Comment created"
          }
        }
      }
    },
    "/api/comments/{commentId}": {
      "put": {
        "summary": "Update a comment by ID",
        "description": "This endpoint is used to update a single comment by its ID",
        "tags": ["Comments"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of the comment to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  }
                },
                "required": ["description"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Comment updated"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a comment by ID",
        "description": "This endpoint is used to delete a single comment by its ID",
        "tags": ["Comments"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of the comment to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Comment deleted"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      }
    },
    "/api/blogs/like/{blogId}": {
      "post": {
        "summary": "Like a blog",
        "description": "This endpoint is used to like a blog",
        "tags": ["Likes"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "blogId",
            "in": "path",
            "description": "ID of the blog to like",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blog liked"
          },
          "404": {
            "description": "Blog not found"
          }
        }
      }
    },
    "/api/blogs/dislike/{blogId}": {
      "post": {
        "summary": "Dislike a blog",
        "description": "This endpoint is used to dislike a blog",
        "tags": ["Likes"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "blogId",
            "in": "path",
            "description": "ID of the blog to dislike",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blog disliked"
          },
          "404": {
            "description": "Blog not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
